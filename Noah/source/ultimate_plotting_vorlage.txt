
def ultimate_plot_copy():
    
    sample_format_dict_1 = {
        "label"      : r"Messwerte $\frac{1}{2}$",          # r" $ Hier ist Mathmode $ - hier nicht" ---> mit $$ einzäunen
        "fmt"        : '.', 
        "color"      : "red",                               # sämtliche farben werdem auf englisch unterstützt
        "markersize" : 4, 
        "linewidth"  : 1,
        "capsize"    : 0,
        "alpha"      : 1                                    # beschreibt die Opazität der Messwerte: alpha = 0 ---> durchsichtig
    }
    
    sample_format_dict_2 = {
        "label"      : r"Messwerte2",                      # r"wort" ---> LaTeX-Befehle werden richig erkannt
        "fmt"        : '.', 
        "color"      : sns.color_palette("dark")[1],       # seaborn bietet spannendere Farben
        "markersize" : 4, 
        "linewidth"  : 1,
        "capsize"    : 0,
        "alpha"      : 1
    }
    
    all_sample_format_dicts = sample_format_dict_1, sample_format_dict_2
    
    writtings = {
        "titel"           : r"Titel",
        "x_beschriftung"  : r"X-Werte [Einheit]",
        "y_beschriftung"  : r"Y-Werte [Einheit]"
    }
    
    
    general_format_dict = {
        "fig_side_lengh"       : din_norm(4),        # Format des Bildes: [x_länge, y_länge]
        "dpi_resoltion"        : 300,                # Auflösungsfaktor des Bildes
        "font_family"          : 'computer modern',  # Schriftart
        "standard_font_size"   : 11,                 # steuert die Standardtextgröße
        "title_size"           : 15,                 # Schriftgröße des Titels
        "legend_font_size"     : 10,                 # Schriftgröße der Legende
        "ax_label_font_size"   : 12,                 # Schriftgröße der x- und y-Beschriftungen
        "x_tick_font_size"     : 8,                  # Schriftgröße der x-Tick-Labels
        "y_tick_font_size"     : 8,                  # Schriftgröße der y-Tick-Labels
        "custom_x_range"       : [ False, 0, 100 ],  # Wahl des Bildausschnitts vom Koordinatensystem (Hauptplot)
        "custom_y_range"       : [ False, 0, 100 ]   # Format: [ ja/nein, unteres Limit, oberes Limit ]
    }
    
    zoom_parameters = {
        "do_zooming"      : False,                   # True ---> Zoomausschnitt aktiviert
        "x_range"         : [ 0, 300 ],              # Wahl des Bildausschnitts vom Koordinatensystem (Zoom-plot)
        "y_range"         : [ 0, 500 ],
        "window_position" : [ 0.6, 0.3 ],            # relative Position des sub_windows: minimal [0, 0] maximal [1, 1]
        "window_size"     : [ 0.25, 0.25 ]           # relative Größe des sub_windwows:   minimal [0, 0] maximal [1, 1]
    }
    
    
#    data_set_1 = sample_x, sample_x_err, sample_y, sample_y_err       # numpy-arrays nutzen!
#    data_set_2 = sample_x2, sample_x2_err, sample_y2, sample_y2_err   # die Menge der data_sets ist beliebig variabel
#    all_data = data_set_1 + data_set_2                                # alle arrays müssen in "all_data" aneinander gehangen werden
                                                                      # ---> all_data = [ x, x_err, y, y_err, x2, x2_err, y2, y2_err ... ]
    
    save_plot = True, "bild.jpg"                                      # mögliche Speicherformate: ".jpg" , ".png" , ".pdf"
        
    ultimate_plot_advanced( all_data, writtings, zoom_parameters, save_plot, all_sample_format_dicts, general_format_dict )